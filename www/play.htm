<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
  <meta http-equiv="Cache-Control" content="private, no-store" />
  <title>Play</title>
  <style>
  html {
    touch-action: manipulation;
    overflow: auto;
  }

  body {
    font-family: Arial, sans-serif;
    color: #faffff;
    background: #111;
    font-size: 17px;
    text-align: center;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
  }
  
  #return_main_menu {
    float: left;
  }

  .grid-container {
    display: grid;
    grid-template-columns: repeat(4, minmax(20px, 1fr));
    grid-column-gap: 5px;
    width: 1000px;
    max-width: 95vw;
    justify-content: center;
    margin: 5px auto;
    padding: 5px;
  }

  .grid-container div {
    border: 1px solid #fff;
  }

  .image {
    background: #bb8888;
  }
  
  .composite {
    background: #88bb88;
  }

  .animation {
    background: #88bbbb;
  }

  .playlist {
    background: #8888bb;
  }

  input[type="button"] {
    margin: 5px auto;
    border: 0;
    border-radius: 0.3rem;
    color: #faffff;
    line-height: 2.4rem;
    font-size: 1.2rem;
    padding: 8px 0px;
    width: 100%;
    transition-duration: 0.4s;
    cursor: pointer;
  }
  input[type="button"]:hover {
    background: #0e70a4;
  }
/*
  button,
  input[type="button"] {
    margin: 5px auto;
    border: 0;
    border-radius: 0.3rem;
    color: #faffff;
    line-height: 2.4rem;
    font-size: 1.2rem;
    width: 100%;
    -webkit-transition-duration: 0.4s;
    transition-duration: 0.4s;
    cursor: pointer;
  }
  button:hover,
  input[type="button"]:hover {
    background: #0e70a4;
  }
*/

</style>
</head>
<body>
  <a id="return_main_menu" href="index.htm">
    <svg height="24px" width="24px" viewBox="0 0 16 16" id="Layer_1">
      <path fill="white" d="M15.45,7L14,5.551V2c0-0.55-0.45-1-1-1h-1c-0.55,0-1,0.45-1,1v0.553L9,0.555C8.727,0.297,8.477,0,8,0S7.273,0.297,7,0.555  L0.55,7C0.238,7.325,0,7.562,0,8c0,0.563,0.432,1,1,1h1v6c0,0.55,0.45,1,1,1h3v-5c0-0.55,0.45-1,1-1h2c0.55,0,1,0.45,1,1v5h3  c0.55,0,1-0.45,1-1V9h1c0.568,0,1-0.437,1-1C16,7.562,15.762,7.325,15.45,7z"/>
    </svg>
  </a>

  <h3>Display saved files on the LED matrix.</h3>

  <div class="grid-container">
    <div id="im_btns">
      <h4>Saved Images</h4>
    </div>
    <div id="cm_btns">
      <h4>Saved Composites</h4>
    </div>
    <div id="an_btns">
      <h4>Saved Animations</h4>
    </div>
    <div id="pl_btns">
      <h4>Saved Playlists</h4>
    </div>
  </div>

  <!--div id="main_button">
    <a href="./"><button name="">Main Menu</button></a>
  </div-->
<script>

let base_url = "";
if (window.location.protocol == "file:") {
  // makes for easier debugging.
  // if html is loaded locally, can see the results of editing more easily.
  // otherwise every change to html would require uploading new version to microcontroller.
  base_url = "http://pixelart.local";
}


function populate_effects(list) {
  let im_btns_div = document.getElementById("im_btns");
  let cm_btns_div = document.getElementById("cm_btns");
  let an_btns_div = document.getElementById("an_btns");
  let pl_btns_div = document.getElementById("pl_btns");
  
  for (let i = 0; i < list.length; i++) {
    let type = list[i]["t"]; 
    let id = list[i]["id"];
    if(type && id) { 
      if (type === "im") {
        im_btns_div.insertAdjacentHTML("beforeend", `<input type="button" id="${id}" class="btn image" data-type="im" value="${id}" onclick="load('im', '${id}')">`)
      }
      else if (type === "cm") {
        cm_btns_div.insertAdjacentHTML("beforeend", `<input type="button" id="${id}" class="btn composite" data-type="cm" value="${id}" onclick="load('cm', '${id}')">`)
      }
      else if (type === "an") {
        an_btns_div.insertAdjacentHTML("beforeend", `<input type="button" id="${id}" class="btn animation" data-type="an" value="${id}" onclick="load('an', '${id}')">`)
      }
      else if (type === "pl") {
        pl_btns_div.insertAdjacentHTML("beforeend", `<input type="button" id="${id}" class="btn playlist" data-type="pl" value="${id}" onclick="load('pl', '${id}')">`)
      }
    }
  }
}


async function fetch_source() {
  const t = await fetch(base_url+"/file_list.json");
  let reply = await t.json();
  populate_effects(reply);
}


async function load(type, id) {
  const t = await fetch(base_url+"/load", {
    method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded"
      },
      body: `t=${type}&id=${id}`
  }),
  reply = await t.json();
  console.log(reply)
}

window.addEventListener("load", fetch_source);

</script>
</body>
</html>
